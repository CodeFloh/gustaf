Search.setIndex({"docnames": ["CONTRIBUTING", "gustaf", "gustaf.create", "gustaf.helpers", "gustaf.io", "gustaf.spline", "gustaf.spline.microstructure", "gustaf.spline.microstructure.tiles", "gustaf.utils", "index", "modules"], "filenames": ["CONTRIBUTING.rst", "gustaf.rst", "gustaf.create.rst", "gustaf.helpers.rst", "gustaf.io.rst", "gustaf.spline.rst", "gustaf.spline.microstructure.rst", "gustaf.spline.microstructure.tiles.rst", "gustaf.utils.rst", "index.rst", "modules.rst"], "titles": ["Contributing", "gustaf", "gustaf.create", "gustaf.helpers", "gustaf.io", "gustaf.spline", "gustaf.spline.microstructure", "gustaf.spline.microstructure.tiles", "gustaf.utils", "gustaf", "gustaf"], "terms": {"gustaf": 0, "welcom": 0, "appreci": 0, "discuss": 0, "issu": 0, "onc": [0, 1], "repo": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "fork": 0, "one": [0, 1, 5, 7, 8], "possibl": [0, 1, 3, 5], "point": [0, 2, 5, 6, 7, 8], "would": [0, 3, 8], "creat": [0, 1, 6, 7, 9, 10], "new": [0, 5], "python": [0, 5, 8], "environ": [0, 9], "exampl": [0, 3, 5, 8, 9], "us": [0, 1, 2, 3, 5, 6, 7, 8], "conda": [0, 9], "3": [0, 1, 2, 3, 5, 7, 8], "9": [0, 9], "n": [0, 1, 2, 3, 5, 8], "gustafenv": 0, "activ": 0, "git": [0, 9], "clone": 0, "github": [0, 1, 3, 8, 9], "com": [0, 1, 3, 8, 9], "path": [0, 4], "your": [0, 4, 5, 9], "cd": [0, 9], "checkout": 0, "b": [0, 8], "feature0": 0, "python3": 0, "setup": 0, "py": [0, 1, 2, 3, 4, 5, 8], "develop": 0, "tri": [0, 1, 8], "follow": [0, 1, 5, 8, 9], "pep8": 0, "": [0, 1, 3, 5, 9], "close": [0, 1, 3, 5, 6, 7, 8], "rais": [0, 3, 8], "instead": [0, 5], "assert": 0, "complex": 0, "comprehens": 0, "fit": [0, 7], "line": [0, 1, 5, 8, 9, 10], "2": [0, 1, 2, 3, 5, 7, 8, 9], "max": 0, "total": [0, 6], "necessari": [0, 3, 7, 9], "first": [0, 5, 7], "letter": 0, "abbrevi": 0, "element": [0, 1, 4, 5, 7, 8, 9, 10], "loop": 0, "kv": 0, "knot_vector": [0, 5], "j": 0, "k": 0, "l": 0, "pure": 0, "index": [0, 3, 8], "enumer": 0, "featur": [0, 1], "open": [0, 5], "door": 0, "more": [0, 1, 3, 5, 8], "relat": [0, 1, 5], "function": [0, 3, 4, 5, 6, 7, 8, 9], "consid": [0, 1, 8], "helper": [0, 1, 5, 6, 9, 10], "class": [0, 1, 3, 5, 6, 7], "try": [0, 1, 4], "avoid": [0, 3, 4], "possibli": 0, "giant": 0, "entri": [0, 1, 7, 8], "ar": [0, 1, 2, 3, 5, 7, 9], "cover": 0, "auto": 0, "vertic": [0, 4, 5, 8, 9, 10], "align": 0, "onli": [0, 1, 5, 7, 9], "space": [0, 1, 4, 5, 7], "multipl": [0, 2, 8], "indent": 0, "width": [0, 5], "tip": 0, "ad": [0, 8], "trail": 0, "comma": 0, "list": [0, 1, 3, 5, 6, 7, 8], "all": [0, 1, 3, 4, 5], "parenthesi": 0, "bracket": 0, "brace": 0, "put": [0, 1], "separ": [0, 3, 5], "dedent": 0, "combin": 0, "yapf": 0, "autopep8": 0, "automat": 0, "Then": 0, "flake8": 0, "doubl": 0, "everyth": [0, 1], "To": [0, 3, 4, 5], "code": 0, "command": 0, "pip": [0, 9], "instal": [0, 3], "root": 0, "r": [0, 5], "test": [0, 5, 9], "select": [0, 8], "w291": 0, "w292": 0, "w293": 0, "w504": 0, "e265": 0, "e501": 0, "e711": 0, "e722": 0, "aggress": 0, "document": [0, 9], "look": [0, 1, 2, 5], "intend": 0, "you": [0, 1, 3, 5, 8, 9], "can": [0, 1, 2, 4, 5, 7, 8, 9], "rememb": 0, "spline": [0, 1, 9, 10], "extens": 0, "empti": 0, "don": [0, 3], "t": [0, 1, 3, 8], "have": [0, 2, 3, 5, 8], "splinepi": [0, 1, 3, 5, 9], "avail": [0, 1, 5, 9], "requir": [0, 3, 6], "txt": [0, 3], "sphinx": 0, "apidoc": 0, "f": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8], "_templat": 0, "o": [0, 1], "html": 0, "now": 0, "browser": 0, "successor": 0, "gustav": [0, 5], "which": [0, 3], "wa": [0, 8], "an": [0, 5, 7, 8], "intern": [0, 5, 7], "experiment": 0, "librari": [0, 1, 8], "until": [0, 9], "fulli": 0, "transfer": 0, "mai": 0, "go": 0, "through": 0, "sever": 0, "dramat": 0, "chang": [0, 3, 5], "gentl": 0, "pr": 0, "so": [0, 1, 5, 9], "pre": 0, "alpha": 0, "phase": 0, "end": 0, "soon": [0, 9], "small": 0, "unit": [0, 5, 6], "On": 0, "other": [0, 1, 3], "hand": [0, 9], "perfect": 0, "time": [0, 4], "feedback": 0, "let": 0, "u": [0, 9], "know": 0, "pleas": [0, 5, 9], "error": [0, 3, 9], "befor": [0, 5], "review": 0, "If": [0, 1, 2, 3, 4, 5, 6, 8, 9], "depend": [0, 3], "bash": 0, "gustaf_commit": 0, "extend": [0, 5], "ignor": 0, "d": [0, 1, 2, 3, 5, 8], "rm": 0, "rst": 0, "modul": [0, 3], "The": [0, 5], "need": [0, 1, 3, 5, 6, 7, 9], "call": [0, 2, 5, 8], "from": [0, 1, 3, 4, 5, 8, 9], "repositori": 0, "base": [0, 1, 3, 4, 6, 7, 8, 9, 10], "folder": [0, 9], "box": [1, 2, 5, 9, 10], "parametric_view": [1, 2, 9, 10], "with_bound": [1, 2, 9, 10], "with_parametric_bound": [1, 2, 9, 10], "with_physical_bound": [1, 2, 9, 10], "raster": [1, 2, 9, 10], "data": [1, 6, 8, 9, 10], "computeddata": [1, 3, 9, 10], "__init__": [1, 3, 5, 6, 7, 9, 10], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9], "depends_on": [1, 3, 9], "computedmeshdata": [1, 3, 9, 10], "datahold": [1, 3, 9, 10], "get": [1, 3, 5, 9], "item": [1, 3, 5, 9], "kei": [1, 3, 9], "valu": [1, 3, 5, 7, 8, 9], "trackedarrai": [1, 3, 9, 10], "copi": [1, 3, 5, 9, 10], "mutabl": [1, 3, 9], "view": [1, 2, 3, 9], "unique2dfloat": [1, 3, 9, 10], "id": [1, 3, 8, 9], "intersect": [1, 3, 9], "invers": [1, 3, 7, 8, 9], "unique2dinteg": [1, 3, 8, 9, 10], "count": [1, 2, 3, 9], "make_tracked_arrai": [1, 3, 9, 10], "raise_if": [1, 9, 10], "moduleimportrais": [1, 3, 9, 10], "invalid_inherited_attr": [1, 3, 9, 10], "io": [1, 9, 10], "ioutil": [1, 9, 10], "abs_fnam": [1, 4, 9, 10], "check_and_makedir": [1, 4, 9, 10], "meshio": [1, 9, 10], "mfem": [1, 9, 10], "export": [1, 4, 9, 10], "load": [1, 4, 5, 9, 10], "mixd": [1, 9, 10], "microstructur": [1, 5, 9, 10], "tile": [1, 5, 6, 9, 10], "crosstile2d": [1, 5, 6, 9], "crosstile3d": [1, 5, 6, 9], "inversecrosstile3d": [1, 5, 6, 9], "bspline": [1, 2, 5, 9, 10], "extract": [1, 2, 9, 10], "proxim": [1, 9, 10], "extract_bezier_patch": [1, 5, 9], "nurb": [1, 2, 5, 9, 10], "bezier": [1, 5, 9, 10], "rationalbezi": [1, 5, 9, 10], "gustafsplin": [1, 5, 9, 10], "showabl": [1, 5, 9, 10], "from_mfem": [1, 5, 9, 10], "load_splin": [1, 5, 9, 10], "creator": [1, 5, 9, 10], "extrud": [1, 5, 9, 10], "revolv": [1, 5, 9, 10], "arc": [1, 5, 9, 10], "circl": [1, 5, 9, 10], "cone": [1, 5, 9, 10], "disk": [1, 5, 9, 10], "plate": [1, 5, 9, 10], "pyramid": [1, 5, 9, 10], "sphere": [1, 5, 9, 10], "toru": [1, 5, 9, 10], "extractor": [1, 5, 9, 10], "control_edg": [1, 5, 9, 10], "control_fac": [1, 5, 9, 10], "control_mesh": [1, 5, 9, 10], "control_point": [1, 5, 9, 10], "control_volum": [1, 5, 9, 10], "ffd": [1, 9, 10], "elevate_degre": [1, 5, 9], "insert_knot": [1, 5, 9], "mesh": [1, 2, 3, 4, 5, 8, 9], "reduce_degre": [1, 5, 9], "remove_knot": [1, 5, 9], "closest_control_point": [1, 5, 9, 10], "closest_parametric_coordin": [1, 5, 9, 10], "util": [1, 4, 9, 10], "arr": [1, 9, 10], "bound": [1, 2, 5, 8, 9, 10], "bounds_diagon": [1, 8, 9, 10], "bounds_mean": [1, 8, 9, 10], "bounds_norm": [1, 8, 9, 10], "close_row": [1, 8, 9, 10], "is_one_of_shap": [1, 8, 9, 10], "is_shap": [1, 8, 9, 10], "make_c_contigu": [1, 8, 9, 10], "rotat": [1, 5, 8, 9, 10], "rotation_matrix": [1, 8, 9, 10], "rotation_matrix_around_axi": [1, 8, 9, 10], "select_with_rang": [1, 8, 9, 10], "unique_row": [1, 8, 9, 10], "connec": [1, 9, 10], "faces_to_edg": [1, 8, 9, 10], "hexa_to_quad": [1, 8, 9, 10], "make_hexa_volum": [1, 8, 9, 10], "make_quad_fac": [1, 8, 9, 10], "range_to_edg": [1, 8, 9, 10], "sequence_to_edg": [1, 8, 9, 10], "sorted_uniqu": [1, 8, 9, 10], "subdivide_edg": [1, 8, 9, 10], "subdivide_quad": [1, 8, 9, 10], "subdivide_tri": [1, 8, 9, 10], "tet_to_tri": [1, 8, 9, 10], "volumes_to_fac": [1, 8, 9, 10], "log": [1, 9, 10], "configur": [1, 8, 9, 10], "debug": [1, 8, 9, 10], "info": [1, 3, 4, 5, 8, 9, 10], "warn": [1, 8, 9, 10], "tictoc": [1, 9, 10], "also": [1, 9], "known": 1, "It": [1, 2], "ha": [1, 2, 3, 5, 9], "paramet": [1, 2, 3, 4, 5, 6, 7, 8], "np": [1, 2, 3, 5, 7, 8], "ndarrai": [1, 3, 5, 7, 8], "center": [1, 5, 7, 8, 9, 10], "return": [1, 2, 3, 4, 5, 6, 7, 8], "type": [1, 2, 3, 4, 5, 6, 7, 8], "n_element": 1, "properti": [1, 3, 5, 6, 7], "const_edg": [1, 9, 10], "non": [1, 5], "writeabl": [1, 3], "version": [1, 9], "const_el": [1, 9, 10], "non_mutable_el": 1, "dash": [1, 9, 10], "turn": [1, 3, 8], "given": [1, 2, 3, 4, 5, 8], "chop": 1, "pattern": 1, "should": [1, 2, 3, 8], "length": [1, 5], "float": [1, 2, 3, 5, 7, 8], "default": [1, 2, 3, 4, 5, 8, 9], "self": [1, 5], "bounds_diagonal_norm": [1, 9, 10], "50": 1, "dashing_edg": 1, "its": [1, 3, 5, 8], "origin": [1, 3, 5], "current": [1, 4, 5, 7, 8], "connect": [1, 4, 8], "A": [1, 3, 5], "short": 1, "cut": 1, "fe": 1, "friendli": 1, "term": 1, "mean": [1, 7, 8], "differ": [1, 4], "thing": 1, "int": [1, 2, 5, 6, 7, 8], "iff": [1, 5, 8], "kind": [1, 9, 10], "referenced_vertic": [1, 9, 10], "mask": 1, "referenc": 1, "remove_unreferenced_vertic": [1, 9, 10], "remov": 1, "unreferenc": 1, "adapt": [1, 3, 5, 8, 9], "mikedh": [1, 3], "trimesh": [1, 3], "new_self": 1, "shrink": [1, 9, 10], "ratio": 1, "0": [1, 2, 3, 4, 5, 7, 8], "8": [1, 5, 8], "map_vertexdata": 1, "true": [1, 3, 4, 5, 8], "shrunk": 1, "bool": [1, 2, 3, 4, 5, 6, 8], "map": [1, 5], "vertexdata": [1, 9, 10], "s_element": 1, "single_edg": [1, 9, 10], "indic": [1, 5, 8], "veri": 1, "uniqu": [1, 3, 8], "appear": 1, "For": [1, 3, 4, 5, 8], "well": [1, 5], "construct": [1, 5, 6, 7], "thi": [1, 3, 4, 5, 8, 9], "outlin": [1, 5], "m": [1, 3, 5, 8], "sorted_edg": [1, 9, 10], "sort": [1, 8], "along": [1, 5, 8], "axi": [1, 5, 8], "1": [1, 2, 3, 5, 7, 8, 9], "edges_sort": 1, "n_edg": 1, "tovertic": [1, 9, 10], "obj": [1, 5], "unique_edg": [1, 9, 10], "name": [1, 3, 4, 8, 9], "tupl": [1, 3, 5, 7, 8], "includ": [1, 3], "each": [1, 2, 5, 8], "unique_info": [1, 8], "valid": [1, 5], "attribut": [1, 4, 5, 6], "update_edg": [1, 9, 10], "arg": [1, 3, 5], "kwarg": [1, 3, 5, 6, 7], "alia": 1, "update_el": [1, 9, 10], "similar": [1, 2, 3, 8], "update_vertic": [1, 9, 10], "whatami": [1, 9, 10], "str": [1, 3, 4, 5, 7, 8], "bc": [1, 9, 10], "could": [1, 9], "triangl": [1, 4, 8], "quadrilater": [1, 4], "4": [1, 5, 8], "const_fac": [1, 9, 10], "here": [1, 3, 9], "aren": 1, "main": [1, 3, 8, 9], "comput": [1, 3, 5, 8, 9], "single_fac": [1, 9, 10], "surfac": [1, 5, 6, 7], "sorted_fac": [1, 9, 10], "shape": [1, 2, 5, 8], "toedg": [1, 9, 10], "take": [1, 5, 8], "unique_fac": [1, 9, 10], "namedtupl": [1, 3], "update_fac": [1, 9, 10], "determin": 1, "classmethod": [1, 3], "whatarey": [1, 9, 10], "face_obj": 1, "tell": 1, "quad": [1, 8], "invalid": 1, "mesh_mak": 1, "triangul": 1, "tetrahedr": 1, "input": [1, 3, 4], "form": [1, 5], "tetgenpi": 1, "global": 1, "variabl": [1, 5, 6], "constant": 1, "throughout": 1, "visual": [1, 5, 9], "interpolate_vedo_dictcam": [1, 9, 10], "camera": 1, "resolut": [1, 2, 5, 8], "spline_degre": 1, "interpol": 1, "between": 1, "vedo": [1, 3, 5, 9], "dict": [1, 2, 3, 5, 8], "than": [1, 3, 5], "two": [1, 3], "we": [1, 3, 8, 9], "interpolated_cam": 1, "make_show": [1, 9, 10], "backend": [1, 5], "sinc": [1, 3, 8], "doe": [1, 3, 4, 5], "nativ": 1, "support": [1, 2, 3, 4, 5], "visualiz": 1, "object": [1, 3, 5, 6, 8], "fast": 1, "offer": 1, "lot": 1, "compat": 1, "old": 1, "opengl": 1, "matplotlib": 1, "slow": 1, "vector": [1, 5, 8], "graphic": 1, "option": [1, 2, 3, 4, 5, 6, 8, 9], "visualization_backend": 1, "showalbe_obj": 1, "gusobj": 1, "appropri": 1, "show_vedo": [1, 9, 10], "wrapper": [1, 3, 5, 8], "repres": [1, 6], "section": [1, 5], "window": [1, 5], "In": [1, 5, 6, 8], "word": 1, "len": 1, "where": [1, 3, 5, 9], "correspond": [1, 2, 3], "union": [1, 5], "gustaf_obj": 1, "vedo_obj": 1, "ani": [1, 3, 5, 9], "geometri": [1, 5, 6, 9], "gustafbas": [1, 3, 5, 6, 7], "aabb": 1, "diagon": [1, 8], "bounds_digon": 1, "same": [1, 2, 3, 4, 5], "norm": [1, 8], "concat": [1, 9, 10], "instanc": 1, "sequenti": [1, 8], "them": [1, 3, 8], "togeth": 1, "make": [1, 3, 5, 8], "cl": 1, "allow": [1, 5], "iter": [1, 8], "one_inst": 1, "const_vertic": [1, 9, 10], "inspir": 1, "c": [1, 8, 9], "cpp": 1, "session": 1, "deepcopi": 1, "selfcopi": 1, "vertex": [1, 2, 4, 9], "merge_vertic": [1, 9, 10], "toler": [1, 5, 8], "merg": 1, "mergeabl": 1, "merged_self": 1, "remove_vertic": [1, 9, 10], "select_vertic": [1, 9, 10], "rang": [1, 5, 8], "insid": 1, "arrai": [1, 2, 3, 5, 7, 8], "like": [1, 2, 3, 5, 8], "unique_vertic": [1, 3, 9, 10], "hold": [1, 3], "enough": [1, 3], "within": [1, 7, 8], "recomput": 1, "applic": [1, 5, 9], "keyword": [1, 5], "argument": [1, 5], "forc": [1, 3], "re": 1, "unique_vertices_info": 1, "updat": [1, 5], "keep": [1, 3], "accordingli": [1, 9], "too": [1, 8], "updated_self": 1, "vis_dict": [1, 9, 10], "what": [1, 5], "am": 1, "answer": [1, 3], "deep": 1, "philosoph": 1, "question": 1, "tetrahedron": [1, 4, 8], "hexahedron": [1, 2, 4, 8], "const_volum": [1, 9, 10], "sorted_volum": [1, 9, 10], "volumes_sort": 1, "tofac": [1, 9, 10], "unique_volum": [1, 9, 10], "attribut4": 1, "update_volum": [1, 9, 10], "volume_obj": 1, "overwrit": [1, 5], "tet": [1, 8], "hexa": 1, "routin": 2, "structur": [2, 3, 8], "quadrangl": 2, "block": [2, 6], "param": [2, 4], "minimum": [2, 5, 7], "maximum": [2, 7], "coordin": [2, 6, 7], "dimens": [2, 4, 5, 6, 7, 8], "face_mesh": 2, "frequent": [2, 9], "gener": 2, "parametr": [2, 5, 6, 7], "previous": [2, 5], "naive_splin": 2, "degre": [2, 5, 8], "alwai": [2, 3, 8], "knot": [2, 5], "preserv": 2, "para_splin": 2, "parametric_bound": 2, "physical_bound": 2, "num_unique_knot": 2, "fals": [2, 3, 4, 5, 6, 8], "physic": [2, 5, 7], "less": 2, "equal": [2, 8], "number": [2, 3, 5, 6, 7, 8], "greater": 2, "availab": 2, "simpl": [2, 4, 7], "wraper": 2, "mgrid": 2, "desir": [2, 5], "cast": 2, "raster_vertic": 2, "volume_mesh": 2, "help": 3, "helpe": 3, "manag": 3, "some": [3, 9], "store": 3, "last": 3, "expect": [3, 4], "var_nam": 3, "make_properti": 3, "decor": 3, "check": [3, 4, 5, 8, 9], "case": [3, 5, 9], "ye": [3, 9], "modif": 3, "eras": 3, "multi": 3, "subclass": 3, "own": 3, "abc": 3, "holder": 3, "behav": 3, "probabl": 3, "most": [3, 9], "sens": 3, "default_valu": 3, "exist": [3, 4, 5], "els": [3, 5], "initi": [3, 5], "wai": 3, "dict_valu": 3, "dict_kei": 3, "taken": 3, "nice": 3, "implement": [3, 5], "see": [3, 4, 5, 8, 9], "licens": 3, "http": [3, 4, 9], "blob": [3, 8], "cach": 3, "minor": 3, "hash": 3, "inplac": 3, "set": [3, 5, 6, 8, 9, 10], "modifi": [3, 5], "flag": 3, "oper": [3, 5, 8, 9], "potenti": [3, 5], "caus": 3, "un": 3, "trackabl": 3, "behavior": 3, "note": [3, 5, 8], "realli": 3, "want": 3, "track": 3, "without": [3, 5], "give": [3, 5], "inform": [3, 4, 5, 8], "might": 3, "better": [3, 9], "long": [3, 8], "thei": [3, 5, 9], "2d": [3, 4, 8], "dot": 3, "syntax": 3, "access": 3, "field": 3, "overlap": [3, 8], "itself": 3, "integ": [3, 5, 6], "approach": 3, "dtype": [3, 8], "properli": [3, 5], "numpi": [3, 5, 8, 9], "pitfal": 3, "contigu": [3, 8], "factori": 3, "contain": [3, 5], "collect": 3, "certain": 3, "lib_nam": 3, "error_messag": 3, "mock": 3, "import": [3, 4], "handl": 3, "packag": [3, 5, 9], "due": 3, "part": [3, 5], "func": 3, "qualnam": 3, "property_": 3, "attributeerror": 3, "defin": [3, 5, 6, 7], "level": 3, "_description_": 3, "raiser": 3, "correctli": 3, "lord": 4, "hi": 4, "expertis": 4, "fname": [4, 5], "ab": 4, "tild": 4, "safe": 4, "mayb": 4, "directori": 4, "makedir": 4, "linear": [4, 5, 7], "straight": 4, "detail": 4, "org": 4, "format": [4, 5], "v1": 4, "face": [4, 5, 7, 8, 9, 10], "cannot": 4, "process": [4, 9], "boundari": [4, 7], "space_tim": 4, "semi": 4, "discret": [4, 5], "flat": 4, "output": 4, "volum": [4, 5, 8, 9, 10], "slab": 4, "discontin": 4, "simplex": 4, "mxyz": 4, "mien": 4, "mrng": 4, "read": 4, "minf": 4, "crucial": 4, "locat": [4, 5], "assum": [4, 8, 9], "3d": [4, 8], "specifi": [4, 8], "file": [4, 9], "xn": 4, "postfix": 4, "ex": 4, "deformation_funct": [5, 6, 9], "microtil": [5, 6, 7, 9], "parametrization_funct": [5, 6, 9], "show": [5, 6, 9, 10], "inherit": 5, "para_dim": 5, "dim": [5, 6, 7, 9], "represent": [5, 6], "same_bsplin": 5, "parent": 5, "ensur": 5, "convers": 5, "usabl": 5, "correct": 5, "same_nurb": 5, "ration": 5, "abstract": 5, "contructor": 5, "abstractmethod": 5, "sure": 5, "duplic": 5, "overrid": 5, "geometr": 5, "prism": 5, "directli": [5, 9], "perform": [5, 8, 9], "splinefac": 5, "spline_extract": 5, "queri": 5, "closest_cp_id": 5, "distanc": 5, "return_dist": 5, "spline_proxim": 5, "equival": 5, "kwrag": 5, "return_show": 5, "weight": 5, "nurbs_dict": 5, "reorgan": 5, "control": [5, 7], "gussplin": 5, "100": 5, "show_fitting_queri": 5, "return_discret": 5, "parametric_spac": 5, "color": 5, "surface_alpha": 5, "control_points_alpha": 5, "light": 5, "glossi": 5, "control_point_id": 5, "color_splin": 5, "cmap": 5, "variou": 5, "excess": 5, "adjust": 5, "edg": [5, 8, 9, 10], "relev": 5, "black": 5, "curv": 5, "green": 5, "effect": 5, "things_to_show": 5, "spl": 5, "build": [5, 6], "mysplin": 5, "spline_fac": 5, "radiu": [5, 7, 8], "angl": [5, 8], "90": 5, "n_knot_span": 5, "start_angl": 5, "li": 5, "x": [5, 6, 8], "y": [5, 6, 8], "plane": 5, "around": [5, 8], "z": [5, 6, 7, 8], "span": 5, "start": 5, "nd": 5, "hyperrectangl": 5, "ndbox": 5, "n_knots_span": 5, "outer_radiu": 5, "height": [5, 7], "inner_radiu": 5, "volumetr": 5, "360": 5, "circular": 5, "whether": 5, "solid": 5, "model": 5, "descib": [5, 6], "describ": [5, 6, 7, 8], "hollow": 5, "quadrat": [5, 7], "thick": [5, 7], "outer": [5, 6], "inner": [5, 7], "complet": 5, "revolut": 5, "extrusion_vector": 5, "provid": [5, 6, 7, 9], "npoint": 5, "ndim": 5, "biquadrat": 5, "everi": 5, "direct": 5, "lenght": 5, "basi": 5, "zero": 5, "result": [5, 7], "radiant": [5, 8], "torus_radiu": 5, "section_outer_radiu": 5, "section_inner_radiu": 5, "torus_angl": 5, "section_angl": 5, "section_n_knot_span": 5, "torus_n_knot_span": 5, "cross": 5, "yield": 5, "tube": 5, "anlg": 5, "both": [5, 8], "splittin_plan": 5, "interv": 5, "split": 5, "subsect": 5, "domain": [5, 7], "splitting_plan": 5, "dictionari": 5, "pass": [5, 6], "interval": 5, "bezier_list": 5, "achiev": 5, "do": [5, 8], "cps_as_vertic": 5, "extract_dim": 5, "extract_knot": 5, "all_knot": 5, "entiti": 5, "limit": 5, "switch": 5, "higher": [5, 7], "split_plan": 5, "subsplin": 5, "extrac": 5, "ted": 5, "freeform": 5, "deform": [5, 6], "previou": 5, "jaewook": 5, "lee": 5, "free": 5, "method": 5, "our": [5, 9], "via": 5, "_type": 5, "mesh_typ": 5, "const": 5, "spline_typ": 5, "scale": 5, "hypercub": 5, "whole": 5, "obtain": 5, "latest": [5, 9], "retriev": 5, "even": [5, 8], "though": 5, "least": 5, "partial": 5, "plan": 5, "localffd": 5, "_spline": 5, "_mesh": 5, "unscal": 5, "_q_vertic": 5, "parametric_dimens": 5, "appli": [5, 8], "accord": 5, "1e": 5, "08": 5, "titl": 5, "arbitrari": 5, "These": 5, "onto": 5, "awar": 5, "plotter": 5, "state": 5, "redirect": 5, "setter": 5, "explicitli": 5, "closest": 5, "query_point": 5, "nearest_onli": 5, "find": [5, 8], "closing_til": [6, 7, 9], "create_til": [6, 7, 9], "evaluation_point": [6, 7, 9], "parameter_space_dimens": [6, 7, 9], "facilitata": 6, "contour": 6, "per": [6, 7, 8], "cube": 6, "callabl": 6, "closing_fac": 6, "knot_span_wis": 6, "string": 6, "must": [6, 7, 9], "insert": 6, "knotspan": 6, "v": 6, "paradim": 6, "finish": 6, "either": [6, 7, 8], "order": [6, 7], "said": 6, "coupl": 6, "evalu": [6, 7], "dimension": [6, 7], "design": 6, "local": [6, 9], "use_sav": 6, "return_gustaf": 6, "crosstil": 7, "branch": 7, "trilinear": 7, "closur": 7, "boundary_width": 7, "filling_height": 7, "5": [7, 8, 9], "match": [7, 8], "radii": 7, "cylind": 7, "positiv": 7, "request": 7, "That": 7, "e": 7, "surrond": 7, "portion": 7, "fill": 7, "list_of_splin": 7, "center_expans": 7, "outward": 7, "expand": 7, "factor": 7, "microtile_list": 7, "posit": 7, "when": 7, "prior": 7, "composit": 7, "6": [7, 8], "z_min": 7, "z_max": 7, "seperator_dist": 7, "sound": 8, "funni": 8, "search": 8, "kdtree": 8, "scipi": [8, 9], "spatial": 8, "ckdtree": 8, "unique_arrai": 8, "unique_id": 8, "neighbor": 8, "strict": 8, "accept": 8, "neg": 8, "valueerror": 8, "just": 8, "interpret": 8, "c_contiguous_arrai": 8, "rotation_axi": 8, "rotated_point": 8, "matrix": 8, "work": [8, 9], "virtual": 8, "transform": 8, "amount": 8, "radian": 8, "rodrigu": 8, "formula": 8, "column": 8, "pars": 8, "greater_than": 8, "less_than": 8, "in_arr": 8, "return_index": 8, "return_invers": 8, "return_count": 8, "dtype_nam": 8, "row": 8, "trick": 8, "skimag": 8, "url": 8, "scikit": 8, "imag": 8, "suitabl": 8, "unique_arr": 8, "p": 8, "q": 8, "unique_ind": 8, "w": 8, "unique_inv": 8, "becaus": 8, "been": 8, "cooler": 8, "palindrom": 8, "scheme": 8, "ref": 8, "node_ind": 8, "edge_ind": 8, "____": 8, "matter": 8, "reorder": 8, "7": 8, "face_ind": 8, "node": 8, "counter": 8, "clock": 8, "wise": 8, "range_": 8, "sequenc": 8, "open_loop_index_train": 8, "seq": 8, "sorted_": 8, "subdivid": 8, "mid": 8, "newli": 8, "node_id": 8, "edge_id": 8, "subd_edg": 8, "return_dict": 8, "new_vertic": 8, "subd_fac": 8, "mesh_dict": 8, "divid": 8, "_": 8, "guidanc": 8, "thin": 8, "logfil": 8, "logger": 8, "timer": 8, "tic": 8, "toc": 8, "doc": 9, "loyal": 9, "butler": 9, "numer": 9, "analysi": 9, "tataratat": 9, "while": 9, "dure": 9, "descript": 9, "forg": 9, "render": 9, "recommend": 9, "instruct": 9, "But": 9, "out": 9, "alreadi": 9, "shown": 9, "vtk": 9, "tend": 9, "problem": 9, "libopenh264": 9, "soft": 9, "link": 9, "conda_prefix": 9, "lib": 9, "occur": 9, "messag": 9, "binari": 9, "linux": 9, "ln": 9, "maco": 9, "dylib": 9, "contiribut": 9, "api": 9, "refer": 9, "meshmak": [9, 10], "segment": [9, 10]}, "objects": {"gustaf.create": [[2, 0, 0, "-", "faces"], [2, 0, 0, "-", "spline"], [2, 0, 0, "-", "vertices"], [2, 0, 0, "-", "volumes"]], "gustaf.create.faces": [[2, 1, 1, "", "box"]], "gustaf.create.spline": [[2, 1, 1, "", "parametric_view"], [2, 1, 1, "", "with_bounds"], [2, 1, 1, "", "with_parametric_bounds"], [2, 1, 1, "", "with_physical_bounds"]], "gustaf.create.vertices": [[2, 1, 1, "", "raster"]], "gustaf.create.volumes": [[2, 1, 1, "", "box"]], "gustaf": [[1, 0, 0, "-", "edges"], [1, 0, 0, "-", "faces"], [1, 0, 0, "-", "meshmaker"], [1, 0, 0, "-", "segment"], [1, 0, 0, "-", "settings"], [1, 0, 0, "-", "show"], [1, 0, 0, "-", "vertices"], [1, 0, 0, "-", "volumes"]], "gustaf.edges": [[1, 2, 1, "", "Edges"]], "gustaf.edges.Edges": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "centers"], [1, 4, 1, "", "const_edges"], [1, 4, 1, "", "const_elements"], [1, 3, 1, "", "dashed"], [1, 4, 1, "", "edges"], [1, 4, 1, "", "elements"], [1, 5, 1, "", "kind"], [1, 3, 1, "", "referenced_vertices"], [1, 3, 1, "", "remove_unreferenced_vertices"], [1, 3, 1, "", "shrink"], [1, 3, 1, "", "single_edges"], [1, 3, 1, "", "sorted_edges"], [1, 3, 1, "", "tovertices"], [1, 3, 1, "", "unique_edges"], [1, 3, 1, "", "update_edges"], [1, 3, 1, "", "update_elements"], [1, 4, 1, "", "whatami"]], "gustaf.faces": [[1, 2, 1, "", "Faces"]], "gustaf.faces.Faces": [[1, 5, 1, "", "BC"], [1, 3, 1, "", "__init__"], [1, 4, 1, "", "const_edges"], [1, 4, 1, "", "const_faces"], [1, 3, 1, "", "dashed"], [1, 3, 1, "", "edges"], [1, 4, 1, "", "faces"], [1, 5, 1, "", "kind"], [1, 3, 1, "", "single_faces"], [1, 3, 1, "", "sorted_faces"], [1, 3, 1, "", "toedges"], [1, 3, 1, "", "unique_faces"], [1, 3, 1, "", "update_edges"], [1, 3, 1, "", "update_faces"], [1, 4, 1, "", "whatami"], [1, 3, 1, "", "whatareyou"]], "gustaf.helpers": [[3, 0, 0, "-", "data"], [3, 0, 0, "-", "raise_if"]], "gustaf.helpers.data": [[3, 2, 1, "", "ComputedData"], [3, 2, 1, "", "ComputedMeshData"], [3, 2, 1, "", "DataHolder"], [3, 2, 1, "", "TrackedArray"], [3, 2, 1, "", "Unique2DFloats"], [3, 2, 1, "", "Unique2DIntegers"], [3, 1, 1, "", "make_tracked_array"]], "gustaf.helpers.data.ComputedData": [[3, 5, 1, "", "None"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "depends_on"]], "gustaf.helpers.data.DataHolder": [[3, 5, 1, "", "None"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "get"], [3, 3, 1, "", "items"], [3, 3, 1, "", "keys"], [3, 3, 1, "", "values"]], "gustaf.helpers.data.TrackedArray": [[3, 3, 1, "", "copy"], [3, 4, 1, "", "mutable"], [3, 3, 1, "", "view"]], "gustaf.helpers.data.Unique2DFloats": [[3, 5, 1, "", "ids"], [3, 5, 1, "", "intersection"], [3, 5, 1, "", "inverse"], [3, 5, 1, "", "values"]], "gustaf.helpers.data.Unique2DIntegers": [[3, 5, 1, "", "counts"], [3, 5, 1, "", "ids"], [3, 5, 1, "", "inverse"], [3, 5, 1, "", "values"]], "gustaf.helpers.raise_if": [[3, 2, 1, "", "ModuleImportRaiser"], [3, 1, 1, "", "invalid_inherited_attr"]], "gustaf.helpers.raise_if.ModuleImportRaiser": [[3, 3, 1, "", "__init__"]], "gustaf.io": [[4, 0, 0, "-", "ioutils"], [4, 0, 0, "-", "meshio"], [4, 0, 0, "-", "mfem"], [4, 0, 0, "-", "mixd"]], "gustaf.io.ioutils": [[4, 1, 1, "", "abs_fname"], [4, 1, 1, "", "check_and_makedirs"]], "gustaf.io.mfem": [[4, 1, 1, "", "export"], [4, 1, 1, "", "load"]], "gustaf.io.mixd": [[4, 1, 1, "", "export"], [4, 1, 1, "", "load"]], "gustaf.show": [[1, 1, 1, "", "interpolate_vedo_dictcam"], [1, 1, 1, "", "make_showable"], [1, 1, 1, "", "show"], [1, 1, 1, "", "show_vedo"]], "gustaf.spline": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "create"], [5, 0, 0, "-", "extract"], [5, 0, 0, "-", "ffd"], [5, 0, 0, "-", "proximity"]], "gustaf.spline.base": [[5, 2, 1, "", "BSpline"], [5, 2, 1, "", "Bezier"], [5, 2, 1, "", "GustafSpline"], [5, 2, 1, "", "NURBS"], [5, 2, 1, "", "RationalBezier"], [5, 1, 1, "", "from_mfem"], [5, 1, 1, "", "load_splines"], [5, 1, 1, "", "show"]], "gustaf.spline.base.BSpline": [[5, 3, 1, "", "__init__"], [5, 4, 1, "", "bspline"], [5, 5, 1, "", "create"], [5, 5, 1, "", "extract"], [5, 3, 1, "", "extract_bezier_patches"], [5, 4, 1, "", "nurbs"], [5, 5, 1, "", "proximity"]], "gustaf.spline.base.Bezier": [[5, 3, 1, "", "__init__"], [5, 4, 1, "", "bezier"], [5, 4, 1, "", "bspline"], [5, 5, 1, "", "create"], [5, 5, 1, "", "extract"], [5, 4, 1, "", "nurbs"], [5, 5, 1, "", "proximity"], [5, 4, 1, "", "rationalbezier"]], "gustaf.spline.base.GustafSpline": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "copy"], [5, 4, 1, "", "create"], [5, 4, 1, "", "extract"], [5, 4, 1, "", "proximity"], [5, 3, 1, "", "show"], [5, 3, 1, "", "showable"]], "gustaf.spline.base.NURBS": [[5, 3, 1, "", "__init__"], [5, 5, 1, "", "create"], [5, 5, 1, "", "extract"], [5, 3, 1, "", "extract_bezier_patches"], [5, 4, 1, "", "nurbs"], [5, 5, 1, "", "proximity"]], "gustaf.spline.base.RationalBezier": [[5, 3, 1, "", "__init__"], [5, 5, 1, "", "create"], [5, 5, 1, "", "extract"], [5, 4, 1, "", "nurbs"], [5, 5, 1, "", "proximity"], [5, 4, 1, "", "rationalbezier"]], "gustaf.spline.create": [[5, 2, 1, "", "Creator"], [5, 1, 1, "", "arc"], [5, 1, 1, "", "box"], [5, 1, 1, "", "circle"], [5, 1, 1, "", "cone"], [5, 1, 1, "", "disk"], [5, 1, 1, "", "extruded"], [5, 1, 1, "", "line"], [5, 1, 1, "", "plate"], [5, 1, 1, "", "pyramid"], [5, 1, 1, "", "revolved"], [5, 1, 1, "", "sphere"], [5, 1, 1, "", "torus"]], "gustaf.spline.create.Creator": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "extruded"], [5, 3, 1, "", "revolved"]], "gustaf.spline.extract": [[5, 2, 1, "", "Extractor"], [5, 1, 1, "", "beziers"], [5, 1, 1, "", "control_edges"], [5, 1, 1, "", "control_faces"], [5, 1, 1, "", "control_mesh"], [5, 1, 1, "", "control_points"], [5, 1, 1, "", "control_volumes"], [5, 1, 1, "", "edges"], [5, 1, 1, "", "faces"], [5, 1, 1, "", "spline"], [5, 1, 1, "", "volumes"]], "gustaf.spline.extract.Extractor": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "beziers"], [5, 3, 1, "", "control_edges"], [5, 3, 1, "", "control_faces"], [5, 3, 1, "", "control_mesh"], [5, 3, 1, "", "control_points"], [5, 3, 1, "", "control_volumes"], [5, 3, 1, "", "edges"], [5, 3, 1, "", "faces"], [5, 3, 1, "", "spline"], [5, 3, 1, "", "volumes"]], "gustaf.spline.ffd": [[5, 2, 1, "", "FFD"]], "gustaf.spline.ffd.FFD": [[5, 3, 1, "", "__init__"], [5, 4, 1, "", "control_points"], [5, 3, 1, "", "elevate_degree"], [5, 3, 1, "", "insert_knots"], [5, 4, 1, "", "mesh"], [5, 3, 1, "", "reduce_degree"], [5, 3, 1, "", "remove_knots"], [5, 3, 1, "", "show"], [5, 3, 1, "", "showable"], [5, 4, 1, "", "spline"]], "gustaf.spline.microstructure": [[6, 0, 0, "-", "microstructure"]], "gustaf.spline.microstructure.microstructure": [[6, 2, 1, "", "Microstructure"]], "gustaf.spline.microstructure.microstructure.Microstructure": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "create"], [6, 4, 1, "", "deformation_function"], [6, 4, 1, "", "microtile"], [6, 4, 1, "", "parametrization_function"], [6, 3, 1, "", "show"], [6, 4, 1, "", "tiling"]], "gustaf.spline.microstructure.tiles": [[7, 0, 0, "-", "crosstile2d"], [7, 0, 0, "-", "crosstile3d"], [7, 0, 0, "-", "inversecrosstile3d"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[7, 2, 1, "", "CrossTile2D"]], "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "closing_tile"], [7, 3, 1, "", "create_tile"], [7, 4, 1, "", "dim"], [7, 4, 1, "", "evaluation_points"], [7, 4, 1, "", "parameter_space_dimension"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[7, 2, 1, "", "CrossTile3D"]], "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "closing_tile"], [7, 3, 1, "", "create_tile"], [7, 4, 1, "", "dim"], [7, 4, 1, "", "evaluation_points"], [7, 4, 1, "", "parameter_space_dimension"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[7, 2, 1, "", "InverseCrossTile3D"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "closing_tile"], [7, 3, 1, "", "create_tile"], [7, 4, 1, "", "dim"], [7, 4, 1, "", "evaluation_points"], [7, 4, 1, "", "parameter_space_dimension"]], "gustaf.spline.proximity": [[5, 2, 1, "", "Proximity"], [5, 1, 1, "", "closest_control_points"], [5, 1, 1, "", "closest_parametric_coordinate"]], "gustaf.spline.proximity.Proximity": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "closest_control_points"]], "gustaf.utils": [[8, 0, 0, "-", "arr"], [8, 0, 0, "-", "connec"], [8, 0, 0, "-", "log"], [8, 0, 0, "-", "tictoc"]], "gustaf.utils.arr": [[8, 1, 1, "", "bounds"], [8, 1, 1, "", "bounds_diagonal"], [8, 1, 1, "", "bounds_mean"], [8, 1, 1, "", "bounds_norm"], [8, 1, 1, "", "close_rows"], [8, 1, 1, "", "is_one_of_shapes"], [8, 1, 1, "", "is_shape"], [8, 1, 1, "", "make_c_contiguous"], [8, 1, 1, "", "rotate"], [8, 1, 1, "", "rotation_matrix"], [8, 1, 1, "", "rotation_matrix_around_axis"], [8, 1, 1, "", "select_with_ranges"], [8, 1, 1, "", "unique_rows"]], "gustaf.utils.connec": [[8, 1, 1, "", "faces_to_edges"], [8, 1, 1, "", "hexa_to_quad"], [8, 1, 1, "", "make_hexa_volumes"], [8, 1, 1, "", "make_quad_faces"], [8, 1, 1, "", "range_to_edges"], [8, 1, 1, "", "sequence_to_edges"], [8, 1, 1, "", "sorted_unique"], [8, 1, 1, "", "subdivide_edges"], [8, 1, 1, "", "subdivide_quad"], [8, 1, 1, "", "subdivide_tri"], [8, 1, 1, "", "tet_to_tri"], [8, 1, 1, "", "volumes_to_faces"]], "gustaf.utils.log": [[8, 1, 1, "", "configure"], [8, 1, 1, "", "debug"], [8, 1, 1, "", "info"], [8, 1, 1, "", "warning"]], "gustaf.vertices": [[1, 2, 1, "", "Vertices"]], "gustaf.vertices.Vertices": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "bounds"], [1, 3, 1, "", "bounds_diagonal"], [1, 3, 1, "", "bounds_diagonal_norm"], [1, 3, 1, "", "concat"], [1, 4, 1, "", "const_vertices"], [1, 3, 1, "", "copy"], [1, 5, 1, "", "kind"], [1, 3, 1, "", "merge_vertices"], [1, 3, 1, "", "remove_vertices"], [1, 3, 1, "", "select_vertices"], [1, 3, 1, "", "show"], [1, 3, 1, "", "showable"], [1, 3, 1, "", "unique_vertices"], [1, 3, 1, "", "update_vertices"], [1, 5, 1, "", "vertexdata"], [1, 4, 1, "", "vertices"], [1, 5, 1, "", "vis_dict"], [1, 4, 1, "", "whatami"]], "gustaf.volumes": [[1, 2, 1, "", "Volumes"]], "gustaf.volumes.Volumes": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "const_faces"], [1, 4, 1, "", "const_volumes"], [1, 3, 1, "", "faces"], [1, 5, 1, "", "kind"], [1, 3, 1, "", "sorted_volumes"], [1, 3, 1, "", "tofaces"], [1, 3, 1, "", "unique_volumes"], [1, 3, 1, "", "update_faces"], [1, 3, 1, "", "update_volumes"], [1, 4, 1, "", "volumes"], [1, 3, 1, "", "whatareyou"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": [0, 9], "quick": [0, 9], "start": [0, 9], "style": 0, "implement": 0, "prefer": 0, "format": 0, "check": 0, "local": 0, "doc": 0, "build": 0, "pull": 0, "request": 0, "suggest": 0, "script": 0, "docu": 0, "gustaf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "edg": 1, "face": [1, 2], "meshmak": 1, "segment": 1, "set": 1, "show": 1, "vertic": [1, 2], "volum": [1, 2], "creat": [2, 5], "spline": [2, 5, 6, 7], "helper": 3, "data": 3, "raise_if": 3, "io": 4, "ioutil": 4, "meshio": 4, "mfem": 4, "mixd": 4, "base": 5, "extract": 5, "ffd": 5, "proxim": 5, "microstructur": [6, 7], "tile": 7, "crosstile2d": 7, "crosstile3d": 7, "inversecrosstile3d": 7, "util": 8, "arr": 8, "connec": 8, "log": 8, "tictoc": 8, "instal": 9, "depend": 9, "note": 9, "sourc": 9, "librari": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing": [[0, "contributing"], [0, "id1"], [9, "contributing"]], "Quick start": [[0, "quick-start"]], "Style / implementation preferences": [[0, "style-implementation-preferences"]], "Formatting and style check": [[0, "formatting-and-style-check"]], "Local docs build": [[0, "local-docs-build"]], "Pull request suggestions": [[0, "pull-request-suggestions"]], "Script for format and docu checking": [[0, "script-for-format-and-docu-checking"]], "gustaf": [[1, "gustaf"], [9, "gustaf"], [9, "id1"], [10, "gustaf"]], "gustaf.edges": [[1, "module-gustaf.edges"]], "gustaf.faces": [[1, "module-gustaf.faces"]], "gustaf.meshmaker": [[1, "module-gustaf.meshmaker"]], "gustaf.segment": [[1, "module-gustaf.segment"]], "gustaf.settings": [[1, "module-gustaf.settings"]], "gustaf.show": [[1, "module-gustaf.show"]], "gustaf.vertices": [[1, "module-gustaf.vertices"]], "gustaf.volumes": [[1, "module-gustaf.volumes"]], "gustaf.create": [[2, "gustaf-create"]], "gustaf.create.faces": [[2, "module-gustaf.create.faces"]], "gustaf.create.spline": [[2, "module-gustaf.create.spline"]], "gustaf.create.vertices": [[2, "module-gustaf.create.vertices"]], "gustaf.create.volumes": [[2, "module-gustaf.create.volumes"]], "gustaf.helpers": [[3, "gustaf-helpers"]], "gustaf.helpers.data": [[3, "module-gustaf.helpers.data"]], "gustaf.helpers.raise_if": [[3, "module-gustaf.helpers.raise_if"]], "gustaf.io": [[4, "gustaf-io"]], "gustaf.io.ioutils": [[4, "module-gustaf.io.ioutils"]], "gustaf.io.meshio": [[4, "module-gustaf.io.meshio"]], "gustaf.io.mfem": [[4, "module-gustaf.io.mfem"]], "gustaf.io.mixd": [[4, "module-gustaf.io.mixd"]], "gustaf.spline": [[5, "gustaf-spline"]], "gustaf.spline.base": [[5, "module-gustaf.spline.base"]], "gustaf.spline.create": [[5, "module-gustaf.spline.create"]], "gustaf.spline.extract": [[5, "module-gustaf.spline.extract"]], "gustaf.spline.ffd": [[5, "module-gustaf.spline.ffd"]], "gustaf.spline.proximity": [[5, "module-gustaf.spline.proximity"]], "gustaf.spline.microstructure": [[6, "gustaf-spline-microstructure"]], "gustaf.spline.microstructure.microstructure": [[6, "module-gustaf.spline.microstructure.microstructure"]], "gustaf.spline.microstructure.tiles": [[7, "gustaf-spline-microstructure-tiles"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[7, "module-gustaf.spline.microstructure.tiles.crosstile2d"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[7, "module-gustaf.spline.microstructure.tiles.crosstile3d"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[7, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"]], "gustaf.utils": [[8, "gustaf-utils"]], "gustaf.utils.arr": [[8, "module-gustaf.utils.arr"]], "gustaf.utils.connec": [[8, "module-gustaf.utils.connec"]], "gustaf.utils.log": [[8, "module-gustaf.utils.log"]], "gustaf.utils.tictoc": [[8, "module-gustaf.utils.tictoc"]], "Installation": [[9, "installation"]], "Dependencies": [[9, "dependencies"]], "Quick Start": [[9, "quick-start"]], "Notes": [[9, "notes"]], "Sources": [[9, "sources"]], "Library": [[9, "library"]]}, "indexentries": {"bc (gustaf.faces.faces attribute)": [[1, "gustaf.faces.Faces.BC"]], "edges (class in gustaf.edges)": [[1, "gustaf.edges.Edges"]], "faces (class in gustaf.faces)": [[1, "gustaf.faces.Faces"]], "vertices (class in gustaf.vertices)": [[1, "gustaf.vertices.Vertices"]], "volumes (class in gustaf.volumes)": [[1, "gustaf.volumes.Volumes"]], "__init__() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.__init__"]], "__init__() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.__init__"]], "__init__() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.__init__"]], "__init__() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.__init__"]], "bounds() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.bounds"]], "bounds_diagonal() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.bounds_diagonal"]], "bounds_diagonal_norm() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.bounds_diagonal_norm"]], "centers() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.centers"]], "concat() (gustaf.vertices.vertices class method)": [[1, "gustaf.vertices.Vertices.concat"]], "const_edges (gustaf.edges.edges property)": [[1, "gustaf.edges.Edges.const_edges"]], "const_edges (gustaf.faces.faces property)": [[1, "gustaf.faces.Faces.const_edges"]], "const_elements (gustaf.edges.edges property)": [[1, "gustaf.edges.Edges.const_elements"]], "const_faces (gustaf.faces.faces property)": [[1, "gustaf.faces.Faces.const_faces"]], "const_faces (gustaf.volumes.volumes property)": [[1, "gustaf.volumes.Volumes.const_faces"]], "const_vertices (gustaf.vertices.vertices property)": [[1, "gustaf.vertices.Vertices.const_vertices"]], "const_volumes (gustaf.volumes.volumes property)": [[1, "gustaf.volumes.Volumes.const_volumes"]], "copy() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.copy"]], "dashed() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.dashed"]], "dashed() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.dashed"]], "edges (gustaf.edges.edges property)": [[1, "gustaf.edges.Edges.edges"]], "edges() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.edges"]], "elements (gustaf.edges.edges property)": [[1, "gustaf.edges.Edges.elements"]], "faces (gustaf.faces.faces property)": [[1, "gustaf.faces.Faces.faces"]], "faces() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.faces"]], "gustaf.edges": [[1, "module-gustaf.edges"]], "gustaf.faces": [[1, "module-gustaf.faces"]], "gustaf.meshmaker": [[1, "module-gustaf.meshmaker"]], "gustaf.segment": [[1, "module-gustaf.segment"]], "gustaf.settings": [[1, "module-gustaf.settings"]], "gustaf.show": [[1, "module-gustaf.show"]], "gustaf.vertices": [[1, "module-gustaf.vertices"]], "gustaf.volumes": [[1, "module-gustaf.volumes"]], "interpolate_vedo_dictcam() (in module gustaf.show)": [[1, "gustaf.show.interpolate_vedo_dictcam"]], "kind (gustaf.edges.edges attribute)": [[1, "gustaf.edges.Edges.kind"]], "kind (gustaf.faces.faces attribute)": [[1, "gustaf.faces.Faces.kind"]], "kind (gustaf.vertices.vertices attribute)": [[1, "gustaf.vertices.Vertices.kind"]], "kind (gustaf.volumes.volumes attribute)": [[1, "gustaf.volumes.Volumes.kind"]], "make_showable() (in module gustaf.show)": [[1, "gustaf.show.make_showable"]], "merge_vertices() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.merge_vertices"]], "module": [[1, "module-gustaf.edges"], [1, "module-gustaf.faces"], [1, "module-gustaf.meshmaker"], [1, "module-gustaf.segment"], [1, "module-gustaf.settings"], [1, "module-gustaf.show"], [1, "module-gustaf.vertices"], [1, "module-gustaf.volumes"], [2, "module-gustaf.create.faces"], [2, "module-gustaf.create.spline"], [2, "module-gustaf.create.vertices"], [2, "module-gustaf.create.volumes"], [3, "module-gustaf.helpers.data"], [3, "module-gustaf.helpers.raise_if"], [4, "module-gustaf.io.ioutils"], [4, "module-gustaf.io.meshio"], [4, "module-gustaf.io.mfem"], [4, "module-gustaf.io.mixd"], [5, "module-gustaf.spline.base"], [5, "module-gustaf.spline.create"], [5, "module-gustaf.spline.extract"], [5, "module-gustaf.spline.ffd"], [5, "module-gustaf.spline.proximity"], [6, "module-gustaf.spline.microstructure.microstructure"], [7, "module-gustaf.spline.microstructure.tiles.crosstile2d"], [7, "module-gustaf.spline.microstructure.tiles.crosstile3d"], [7, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"], [8, "module-gustaf.utils.arr"], [8, "module-gustaf.utils.connec"], [8, "module-gustaf.utils.log"], [8, "module-gustaf.utils.tictoc"]], "referenced_vertices() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.referenced_vertices"]], "remove_unreferenced_vertices() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.remove_unreferenced_vertices"]], "remove_vertices() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.remove_vertices"]], "select_vertices() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.select_vertices"]], "show() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.show"]], "show() (in module gustaf.show)": [[1, "gustaf.show.show"]], "show_vedo() (in module gustaf.show)": [[1, "gustaf.show.show_vedo"]], "showable() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.showable"]], "shrink() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.shrink"]], "single_edges() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.single_edges"]], "single_faces() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.single_faces"]], "sorted_edges() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.sorted_edges"]], "sorted_faces() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.sorted_faces"]], "sorted_volumes() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.sorted_volumes"]], "toedges() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.toedges"]], "tofaces() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.tofaces"]], "tovertices() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.tovertices"]], "unique_edges() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.unique_edges"]], "unique_faces() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.unique_faces"]], "unique_vertices() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.unique_vertices"]], "unique_volumes() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.unique_volumes"]], "update_edges() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.update_edges"]], "update_edges() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.update_edges"]], "update_elements() (gustaf.edges.edges method)": [[1, "gustaf.edges.Edges.update_elements"]], "update_faces() (gustaf.faces.faces method)": [[1, "gustaf.faces.Faces.update_faces"]], "update_faces() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.update_faces"]], "update_vertices() (gustaf.vertices.vertices method)": [[1, "gustaf.vertices.Vertices.update_vertices"]], "update_volumes() (gustaf.volumes.volumes method)": [[1, "gustaf.volumes.Volumes.update_volumes"]], "vertexdata (gustaf.vertices.vertices attribute)": [[1, "gustaf.vertices.Vertices.vertexdata"]], "vertices (gustaf.vertices.vertices property)": [[1, "gustaf.vertices.Vertices.vertices"]], "vis_dict (gustaf.vertices.vertices attribute)": [[1, "gustaf.vertices.Vertices.vis_dict"]], "volumes (gustaf.volumes.volumes property)": [[1, "gustaf.volumes.Volumes.volumes"]], "whatami (gustaf.edges.edges property)": [[1, "gustaf.edges.Edges.whatami"]], "whatami (gustaf.faces.faces property)": [[1, "gustaf.faces.Faces.whatami"]], "whatami (gustaf.vertices.vertices property)": [[1, "gustaf.vertices.Vertices.whatami"]], "whatareyou() (gustaf.faces.faces class method)": [[1, "gustaf.faces.Faces.whatareyou"]], "whatareyou() (gustaf.volumes.volumes class method)": [[1, "gustaf.volumes.Volumes.whatareyou"]], "box() (in module gustaf.create.faces)": [[2, "gustaf.create.faces.box"]], "box() (in module gustaf.create.volumes)": [[2, "gustaf.create.volumes.box"]], "gustaf.create.faces": [[2, "module-gustaf.create.faces"]], "gustaf.create.spline": [[2, "module-gustaf.create.spline"]], "gustaf.create.vertices": [[2, "module-gustaf.create.vertices"]], "gustaf.create.volumes": [[2, "module-gustaf.create.volumes"]], "parametric_view() (in module gustaf.create.spline)": [[2, "gustaf.create.spline.parametric_view"]], "raster() (in module gustaf.create.vertices)": [[2, "gustaf.create.vertices.raster"]], "with_bounds() (in module gustaf.create.spline)": [[2, "gustaf.create.spline.with_bounds"]], "with_parametric_bounds() (in module gustaf.create.spline)": [[2, "gustaf.create.spline.with_parametric_bounds"]], "with_physical_bounds() (in module gustaf.create.spline)": [[2, "gustaf.create.spline.with_physical_bounds"]], "computeddata (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.ComputedData"]], "computedmeshdata (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.ComputedMeshData"]], "dataholder (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.DataHolder"]], "moduleimportraiser (class in gustaf.helpers.raise_if)": [[3, "gustaf.helpers.raise_if.ModuleImportRaiser"]], "none (gustaf.helpers.data.computeddata attribute)": [[3, "gustaf.helpers.data.ComputedData.None"]], "none (gustaf.helpers.data.dataholder attribute)": [[3, "gustaf.helpers.data.DataHolder.None"]], "trackedarray (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.TrackedArray"]], "unique2dfloats (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.Unique2DFloats"]], "unique2dintegers (class in gustaf.helpers.data)": [[3, "gustaf.helpers.data.Unique2DIntegers"]], "__init__() (gustaf.helpers.data.computeddata method)": [[3, "gustaf.helpers.data.ComputedData.__init__"]], "__init__() (gustaf.helpers.data.dataholder method)": [[3, "gustaf.helpers.data.DataHolder.__init__"]], "__init__() (gustaf.helpers.raise_if.moduleimportraiser method)": [[3, "gustaf.helpers.raise_if.ModuleImportRaiser.__init__"]], "copy() (gustaf.helpers.data.trackedarray method)": [[3, "gustaf.helpers.data.TrackedArray.copy"]], "counts (gustaf.helpers.data.unique2dintegers attribute)": [[3, "gustaf.helpers.data.Unique2DIntegers.counts"]], "depends_on() (gustaf.helpers.data.computeddata class method)": [[3, "gustaf.helpers.data.ComputedData.depends_on"]], "get() (gustaf.helpers.data.dataholder method)": [[3, "gustaf.helpers.data.DataHolder.get"]], "gustaf.helpers.data": [[3, "module-gustaf.helpers.data"]], "gustaf.helpers.raise_if": [[3, "module-gustaf.helpers.raise_if"]], "ids (gustaf.helpers.data.unique2dfloats attribute)": [[3, "gustaf.helpers.data.Unique2DFloats.ids"]], "ids (gustaf.helpers.data.unique2dintegers attribute)": [[3, "gustaf.helpers.data.Unique2DIntegers.ids"]], "intersection (gustaf.helpers.data.unique2dfloats attribute)": [[3, "gustaf.helpers.data.Unique2DFloats.intersection"]], "invalid_inherited_attr() (in module gustaf.helpers.raise_if)": [[3, "gustaf.helpers.raise_if.invalid_inherited_attr"]], "inverse (gustaf.helpers.data.unique2dfloats attribute)": [[3, "gustaf.helpers.data.Unique2DFloats.inverse"]], "inverse (gustaf.helpers.data.unique2dintegers attribute)": [[3, "gustaf.helpers.data.Unique2DIntegers.inverse"]], "items() (gustaf.helpers.data.dataholder method)": [[3, "gustaf.helpers.data.DataHolder.items"]], "keys() (gustaf.helpers.data.dataholder method)": [[3, "gustaf.helpers.data.DataHolder.keys"]], "make_tracked_array() (in module gustaf.helpers.data)": [[3, "gustaf.helpers.data.make_tracked_array"]], "mutable (gustaf.helpers.data.trackedarray property)": [[3, "gustaf.helpers.data.TrackedArray.mutable"]], "values (gustaf.helpers.data.unique2dfloats attribute)": [[3, "gustaf.helpers.data.Unique2DFloats.values"]], "values (gustaf.helpers.data.unique2dintegers attribute)": [[3, "gustaf.helpers.data.Unique2DIntegers.values"]], "values() (gustaf.helpers.data.dataholder method)": [[3, "gustaf.helpers.data.DataHolder.values"]], "view() (gustaf.helpers.data.trackedarray method)": [[3, "gustaf.helpers.data.TrackedArray.view"]], "abs_fname() (in module gustaf.io.ioutils)": [[4, "gustaf.io.ioutils.abs_fname"]], "check_and_makedirs() (in module gustaf.io.ioutils)": [[4, "gustaf.io.ioutils.check_and_makedirs"]], "export() (in module gustaf.io.mfem)": [[4, "gustaf.io.mfem.export"]], "export() (in module gustaf.io.mixd)": [[4, "gustaf.io.mixd.export"]], "gustaf.io.ioutils": [[4, "module-gustaf.io.ioutils"]], "gustaf.io.meshio": [[4, "module-gustaf.io.meshio"]], "gustaf.io.mfem": [[4, "module-gustaf.io.mfem"]], "gustaf.io.mixd": [[4, "module-gustaf.io.mixd"]], "load() (in module gustaf.io.mfem)": [[4, "gustaf.io.mfem.load"]], "load() (in module gustaf.io.mixd)": [[4, "gustaf.io.mixd.load"]], "bspline (class in gustaf.spline.base)": [[5, "gustaf.spline.base.BSpline"]], "bezier (class in gustaf.spline.base)": [[5, "gustaf.spline.base.Bezier"]], "creator (class in gustaf.spline.create)": [[5, "gustaf.spline.create.Creator"]], "extractor (class in gustaf.spline.extract)": [[5, "gustaf.spline.extract.Extractor"]], "ffd (class in gustaf.spline.ffd)": [[5, "gustaf.spline.ffd.FFD"]], "gustafspline (class in gustaf.spline.base)": [[5, "gustaf.spline.base.GustafSpline"]], "nurbs (class in gustaf.spline.base)": [[5, "gustaf.spline.base.NURBS"]], "proximity (class in gustaf.spline.proximity)": [[5, "gustaf.spline.proximity.Proximity"]], "rationalbezier (class in gustaf.spline.base)": [[5, "gustaf.spline.base.RationalBezier"]], "__init__() (gustaf.spline.base.bspline method)": [[5, "gustaf.spline.base.BSpline.__init__"]], "__init__() (gustaf.spline.base.bezier method)": [[5, "gustaf.spline.base.Bezier.__init__"]], "__init__() (gustaf.spline.base.gustafspline method)": [[5, "gustaf.spline.base.GustafSpline.__init__"]], "__init__() (gustaf.spline.base.nurbs method)": [[5, "gustaf.spline.base.NURBS.__init__"]], "__init__() (gustaf.spline.base.rationalbezier method)": [[5, "gustaf.spline.base.RationalBezier.__init__"]], "__init__() (gustaf.spline.create.creator method)": [[5, "gustaf.spline.create.Creator.__init__"]], "__init__() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.__init__"]], "__init__() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.__init__"]], "__init__() (gustaf.spline.proximity.proximity method)": [[5, "gustaf.spline.proximity.Proximity.__init__"]], "arc() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.arc"]], "bezier (gustaf.spline.base.bezier property)": [[5, "gustaf.spline.base.Bezier.bezier"]], "beziers() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.beziers"]], "beziers() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.beziers"]], "box() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.box"]], "bspline (gustaf.spline.base.bspline property)": [[5, "gustaf.spline.base.BSpline.bspline"]], "bspline (gustaf.spline.base.bezier property)": [[5, "gustaf.spline.base.Bezier.bspline"]], "circle() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.circle"]], "closest_control_points() (gustaf.spline.proximity.proximity method)": [[5, "gustaf.spline.proximity.Proximity.closest_control_points"]], "closest_control_points() (in module gustaf.spline.proximity)": [[5, "gustaf.spline.proximity.closest_control_points"]], "closest_parametric_coordinate() (in module gustaf.spline.proximity)": [[5, "gustaf.spline.proximity.closest_parametric_coordinate"]], "cone() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.cone"]], "control_edges() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.control_edges"]], "control_edges() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.control_edges"]], "control_faces() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.control_faces"]], "control_faces() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.control_faces"]], "control_mesh() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.control_mesh"]], "control_mesh() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.control_mesh"]], "control_points (gustaf.spline.ffd.ffd property)": [[5, "gustaf.spline.ffd.FFD.control_points"]], "control_points() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.control_points"]], "control_points() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.control_points"]], "control_volumes() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.control_volumes"]], "control_volumes() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.control_volumes"]], "copy() (gustaf.spline.base.gustafspline method)": [[5, "gustaf.spline.base.GustafSpline.copy"]], "create (gustaf.spline.base.bspline attribute)": [[5, "gustaf.spline.base.BSpline.create"]], "create (gustaf.spline.base.bezier attribute)": [[5, "gustaf.spline.base.Bezier.create"]], "create (gustaf.spline.base.gustafspline property)": [[5, "gustaf.spline.base.GustafSpline.create"]], "create (gustaf.spline.base.nurbs attribute)": [[5, "gustaf.spline.base.NURBS.create"]], "create (gustaf.spline.base.rationalbezier attribute)": [[5, "gustaf.spline.base.RationalBezier.create"]], "disk() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.disk"]], "edges() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.edges"]], "edges() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.edges"]], "elevate_degree() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.elevate_degree"]], "extract (gustaf.spline.base.bspline attribute)": [[5, "gustaf.spline.base.BSpline.extract"]], "extract (gustaf.spline.base.bezier attribute)": [[5, "gustaf.spline.base.Bezier.extract"]], "extract (gustaf.spline.base.gustafspline property)": [[5, "gustaf.spline.base.GustafSpline.extract"]], "extract (gustaf.spline.base.nurbs attribute)": [[5, "gustaf.spline.base.NURBS.extract"]], "extract (gustaf.spline.base.rationalbezier attribute)": [[5, "gustaf.spline.base.RationalBezier.extract"]], "extract_bezier_patches() (gustaf.spline.base.bspline method)": [[5, "gustaf.spline.base.BSpline.extract_bezier_patches"]], "extract_bezier_patches() (gustaf.spline.base.nurbs method)": [[5, "gustaf.spline.base.NURBS.extract_bezier_patches"]], "extruded() (gustaf.spline.create.creator method)": [[5, "gustaf.spline.create.Creator.extruded"]], "extruded() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.extruded"]], "faces() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.faces"]], "faces() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.faces"]], "from_mfem() (in module gustaf.spline.base)": [[5, "gustaf.spline.base.from_mfem"]], "gustaf.spline.base": [[5, "module-gustaf.spline.base"]], "gustaf.spline.create": [[5, "module-gustaf.spline.create"]], "gustaf.spline.extract": [[5, "module-gustaf.spline.extract"]], "gustaf.spline.ffd": [[5, "module-gustaf.spline.ffd"]], "gustaf.spline.proximity": [[5, "module-gustaf.spline.proximity"]], "insert_knots() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.insert_knots"]], "line() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.line"]], "load_splines() (in module gustaf.spline.base)": [[5, "gustaf.spline.base.load_splines"]], "mesh (gustaf.spline.ffd.ffd property)": [[5, "gustaf.spline.ffd.FFD.mesh"]], "nurbs (gustaf.spline.base.bspline property)": [[5, "gustaf.spline.base.BSpline.nurbs"]], "nurbs (gustaf.spline.base.bezier property)": [[5, "gustaf.spline.base.Bezier.nurbs"]], "nurbs (gustaf.spline.base.nurbs property)": [[5, "gustaf.spline.base.NURBS.nurbs"]], "nurbs (gustaf.spline.base.rationalbezier property)": [[5, "gustaf.spline.base.RationalBezier.nurbs"]], "plate() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.plate"]], "proximity (gustaf.spline.base.bspline attribute)": [[5, "gustaf.spline.base.BSpline.proximity"]], "proximity (gustaf.spline.base.bezier attribute)": [[5, "gustaf.spline.base.Bezier.proximity"]], "proximity (gustaf.spline.base.gustafspline property)": [[5, "gustaf.spline.base.GustafSpline.proximity"]], "proximity (gustaf.spline.base.nurbs attribute)": [[5, "gustaf.spline.base.NURBS.proximity"]], "proximity (gustaf.spline.base.rationalbezier attribute)": [[5, "gustaf.spline.base.RationalBezier.proximity"]], "pyramid() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.pyramid"]], "rationalbezier (gustaf.spline.base.bezier property)": [[5, "gustaf.spline.base.Bezier.rationalbezier"]], "rationalbezier (gustaf.spline.base.rationalbezier property)": [[5, "gustaf.spline.base.RationalBezier.rationalbezier"]], "reduce_degree() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.reduce_degree"]], "remove_knots() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.remove_knots"]], "revolved() (gustaf.spline.create.creator method)": [[5, "gustaf.spline.create.Creator.revolved"]], "revolved() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.revolved"]], "show() (gustaf.spline.base.gustafspline method)": [[5, "gustaf.spline.base.GustafSpline.show"]], "show() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.show"]], "show() (in module gustaf.spline.base)": [[5, "gustaf.spline.base.show"]], "showable() (gustaf.spline.base.gustafspline method)": [[5, "gustaf.spline.base.GustafSpline.showable"]], "showable() (gustaf.spline.ffd.ffd method)": [[5, "gustaf.spline.ffd.FFD.showable"]], "sphere() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.sphere"]], "spline (gustaf.spline.ffd.ffd property)": [[5, "gustaf.spline.ffd.FFD.spline"]], "spline() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.spline"]], "spline() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.spline"]], "torus() (in module gustaf.spline.create)": [[5, "gustaf.spline.create.torus"]], "volumes() (gustaf.spline.extract.extractor method)": [[5, "gustaf.spline.extract.Extractor.volumes"]], "volumes() (in module gustaf.spline.extract)": [[5, "gustaf.spline.extract.volumes"]], "microstructure (class in gustaf.spline.microstructure.microstructure)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure"]], "__init__() (gustaf.spline.microstructure.microstructure.microstructure method)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.__init__"]], "create() (gustaf.spline.microstructure.microstructure.microstructure method)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.create"]], "deformation_function (gustaf.spline.microstructure.microstructure.microstructure property)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.deformation_function"]], "gustaf.spline.microstructure.microstructure": [[6, "module-gustaf.spline.microstructure.microstructure"]], "microtile (gustaf.spline.microstructure.microstructure.microstructure property)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.microtile"]], "parametrization_function (gustaf.spline.microstructure.microstructure.microstructure property)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.parametrization_function"]], "show() (gustaf.spline.microstructure.microstructure.microstructure method)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.show"]], "tiling (gustaf.spline.microstructure.microstructure.microstructure property)": [[6, "gustaf.spline.microstructure.microstructure.Microstructure.tiling"]], "crosstile2d (class in gustaf.spline.microstructure.tiles.crosstile2d)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D"]], "crosstile3d (class in gustaf.spline.microstructure.tiles.crosstile3d)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D"]], "inversecrosstile3d (class in gustaf.spline.microstructure.tiles.inversecrosstile3d)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D"]], "__init__() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.__init__"]], "__init__() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.__init__"]], "__init__() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.__init__"]], "closing_tile() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.closing_tile"]], "closing_tile() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.closing_tile"]], "closing_tile() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.closing_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.create_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.create_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.create_tile"]], "dim (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.dim"]], "dim (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.dim"]], "dim (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.dim"]], "evaluation_points (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.evaluation_points"]], "evaluation_points (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.evaluation_points"]], "evaluation_points (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.evaluation_points"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[7, "module-gustaf.spline.microstructure.tiles.crosstile2d"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[7, "module-gustaf.spline.microstructure.tiles.crosstile3d"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[7, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"]], "parameter_space_dimension (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.parameter_space_dimension"]], "parameter_space_dimension (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.parameter_space_dimension"]], "parameter_space_dimension (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d property)": [[7, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.parameter_space_dimension"]], "bounds() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.bounds"]], "bounds_diagonal() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.bounds_diagonal"]], "bounds_mean() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.bounds_mean"]], "bounds_norm() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.bounds_norm"]], "close_rows() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.close_rows"]], "configure() (in module gustaf.utils.log)": [[8, "gustaf.utils.log.configure"]], "debug() (in module gustaf.utils.log)": [[8, "gustaf.utils.log.debug"]], "faces_to_edges() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.faces_to_edges"]], "gustaf.utils.arr": [[8, "module-gustaf.utils.arr"]], "gustaf.utils.connec": [[8, "module-gustaf.utils.connec"]], "gustaf.utils.log": [[8, "module-gustaf.utils.log"]], "gustaf.utils.tictoc": [[8, "module-gustaf.utils.tictoc"]], "hexa_to_quad() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.hexa_to_quad"]], "info() (in module gustaf.utils.log)": [[8, "gustaf.utils.log.info"]], "is_one_of_shapes() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.is_one_of_shapes"]], "is_shape() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.is_shape"]], "make_c_contiguous() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.make_c_contiguous"]], "make_hexa_volumes() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.make_hexa_volumes"]], "make_quad_faces() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.make_quad_faces"]], "range_to_edges() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.range_to_edges"]], "rotate() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.rotate"]], "rotation_matrix() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.rotation_matrix"]], "rotation_matrix_around_axis() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.rotation_matrix_around_axis"]], "select_with_ranges() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.select_with_ranges"]], "sequence_to_edges() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.sequence_to_edges"]], "sorted_unique() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.sorted_unique"]], "subdivide_edges() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.subdivide_edges"]], "subdivide_quad() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.subdivide_quad"]], "subdivide_tri() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.subdivide_tri"]], "tet_to_tri() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.tet_to_tri"]], "unique_rows() (in module gustaf.utils.arr)": [[8, "gustaf.utils.arr.unique_rows"]], "volumes_to_faces() (in module gustaf.utils.connec)": [[8, "gustaf.utils.connec.volumes_to_faces"]], "warning() (in module gustaf.utils.log)": [[8, "gustaf.utils.log.warning"]]}})